input {
  
  udp {
    port => 9996
    codec => netflow {
      versions => [5, 9]
    }
    type => netflow
    tags => [ "netflow" ]
    workers => 20
  }

  udp {
    port => "8514"
    type => "syslog-cisco"
  }  

}

filter {

  if [type] == "netflow" or [type] == "syslog-cisco" {

    # remap the host ip
    mutate {
      id => "HOST-REMAP"
      rename => {"host" => "[host][ip]"}
    }
  
  }

  if [type] == "syslog-cisco" {

    # Parse the log entry into sections.  Cisco doesn't use a consistent log format, unfortunately.
    grok {

      pattern_definitions => {
        "NEXUSTIMESTAMP" => "%{YEAR} %{MONTH} %{SPACE}%{MONTHDAY} %{TIME}( %{TZ})?"
      }

      match => [
        # Nexus
        "message", "%{SYSLOG5424PRI}(%{NUMBER:log_sequence#})?: %{NEXUSTIMESTAMP:log_date}: %%{CISCO_REASON:facility}-%{INT:severity_level}-%{CISCO_REASON:facility_mnemonic}: %{GREEDYDATA:message}",
        "message", "%{SYSLOG5424PRI}(%{NUMBER:log_sequence#})?: %{NEXUSTIMESTAMP:log_date}: %%{CISCO_REASON:facility}-%{CISCO_REASON:facility_sub}-%{INT:severity_level}-%{CISCO_REASON:facility_mnemonic}: %{GREEDYDATA:message}",
        
        "message", "%{SYSLOG5424PRI}(%{NUMBER:log_sequence#})?: %{NEXUSTIMESTAMP:log_date}: %{SPACE}%%{CISCO_REASON:facility}-%{INT:severity_level}-%{CISCO_REASON:facility_mnemonic}: %{GREEDYDATA:message}",
        "message", "%{SYSLOG5424PRI}(%{NUMBER:log_sequence#})?: %{NEXUSTIMESTAMP:log_date}: %{SPACE}%%{CISCO_REASON:facility}-%{CISCO_REASON:facility_sub}-%{INT:severity_level}-%{CISCO_REASON:facility_mnemonic}: %{GREEDYDATA:message}",

        "message", "%{SYSLOG5424PRI}(%{NUMBER:log_sequence#})?: %{NEXUSTIMESTAMP:log_date}: (?:[^:]+) %%{CISCO_REASON:facility}-%{INT:severity_level}-%{CISCO_REASON:facility_mnemonic}: %{GREEDYDATA:message}",
        "message", "%{SYSLOG5424PRI}(%{NUMBER:log_sequence#})?: %{NEXUSTIMESTAMP:log_date}: (?:[^:]+) %%{CISCO_REASON:facility}-%{CISCO_REASON:facility_sub}-%{INT:severity_level}-%{CISCO_REASON:facility_mnemonic}: %{GREEDYDATA:message}"
        
      ]

      overwrite => [ "message" ]

      add_tag => [ "cisco_log_parsed" ]

      remove_field => [ "syslog5424_pri", "@version" ]

    }

    # If we made it here, the grok was sucessful
    if "cisco_log_parsed" in [tags] {
    
      date {
        
        locale => "en"

        match => [
          "log_date",
          
          # Nexus 
          "YYYY MMM dd HH:mm:ss.SSS ZZZ",
          "YYYY MMM dd HH:mm:ss ZZZ",
          "YYYY MMM dd HH:mm:ss.SSS",

          "YYYY MMM  d HH:mm:ss.SSS ZZZ",
          "YYYY MMM  d HH:mm:ss ZZZ",
          "YYYY MMM  d HH:mm:ss.SSS",

          # Hail marry
          "ISO8601"
        ]

        target => "log_date"
      }

      mutate {
          convert => { "severity_level" => "integer" }
      }
      
      translate {
        field       => "severity_level"
        destination => "severity_description"
        
        dictionary => [
          "0", "Emergency",
          "1", "Alert",
          "2", "Critical",
          "3", "Error",
          "4", "Warning",
          "5", "Notification",
          "6", "Informational"
          ]  
      }

    }

  }

  # maps the host name/ip to a device type
  translate {
    id          => "ANNOTATION-GENERAL-NAME-DEVICETYPE"
    fields       => ["[host][name]", "[host][ip]"]
    destination => "[annotation][general][device_type]"
    consul_path => "evertz/insite/common/node/ALL/applications/ALL-SYSTEM/catalog/annotation/catalog/general-host-to-devicetype"
  }

  # maps the host name/ip to a device name
  translate {
    id          => "ANNOTATION-GENERAL-NAME-DEVICENAME"
    fields       => ["[host][name]", "[host][ip]"]
    destination => "[annotation][general][device_name]"
    consul_path => "evertz/insite/common/node/ALL/applications/ALL-SYSTEM/catalog/annotation/catalog/general-host-to-devicename"
  }

}

output {

  # Something went wrong with the grok parsing, don't discard the messages though
  if "_grokparsefailure" in [tags] {
    file {
      path => "/tmp/fail-%{type}-%{+YYYY.MM.dd}.log"
    }
  }
  
  if [type] == "syslog-cisco" {
    elasticsearch {
      hosts => ["127.0.0.1:9200"]
      index => "log-ciscolog-%{+YYYY.MM.dd}"
      template => "/opt/mappings/elasticsearch-template-ciscolog.json"
      template_name => "log-ciscolog"
      template_overwrite => true
    }
  }

  if "netflow" in [tags] {
    elasticsearch {
      hosts => [ "127.0.0.1:9200" ]
      index => "log-netflow-%{+YYYY.MM.dd}"
      template => "/opt/mappings/elasticsearch-template-netflow.json"
      template_name => "log-netflow"
      template_overwrite => true
    }
  }
  
}
